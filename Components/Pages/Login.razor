@page "/"
@inject UserService UserService
@inject NavigationManager NavigationManager
@using CW1Preyanshu.Components.Layout
@using CW1Preyanshu.Components.Model
@using CW1Preyanshu.Models

@layout FirstLayout

<h3 class="page-title">Login</h3>

<div class="form-container">
    <div class="input-group">
        <input id="login-username" @bind="LoginUsername" placeholder="Username" class="input-field" />
    </div>
    <div class="input-group">
        <input id="login-password" @bind="LoginPassword" placeholder="Password" type="password" class="input-field" />
    </div>
    <button @onclick="LoginPage" class="submit-btn">Login</button>
    <div class="register-link">
        <a href="/register">Don't have an account? Register here</a>
    </div>
</div>

@if (!string.IsNullOrEmpty(Message))
{
    <p class="message-text">@Message</p>
}

@code {
    private string LoginUsername = "";
    private string LoginPassword = "";
    private string Message = "";
    private List<User> Users = new();

    protected override void OnInitialized()
    {
        Users = UserService.LoadUsers();  // Load users
    }

    private async Task LoginPage()
    {
        if (string.IsNullOrWhiteSpace(LoginUsername) || string.IsNullOrWhiteSpace(LoginPassword))
        {
            Message = "Please enter both username and password.";
            return;
        }

        // Validate user login by hashed password
        var user = Users.FirstOrDefault(u => u.Username.Equals(LoginUsername, StringComparison.OrdinalIgnoreCase));
        if (user != null && UserService.ValidatePassword(LoginPassword, user.Password))
        {
            Message = "Login successful! Redirecting...";
            StateHasChanged();  // Forces the UI to update
            await Task.Delay(2000);  // Wait for 2 seconds before navigating
            UserService.SetCurrentUser(user);  // Set logged-in user
            NavigationManager.NavigateTo("/dashboard");  // Redirect to user dashboard
            return;
        }

        Message = "Invalid username or password.";
    }
}

<style>
    /* Basic styling for the page */
    .page-title {
        text-align: center;
        margin-top: 20px;
        font-size: 28px;
        font-weight: bold;
    }

    /* Form container */
    .form-container {
        max-width: 400px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 8px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* Input fields */
    .input-group {
        margin-bottom: 15px;
    }

    .input-field {
        width: 100%;
        padding: 10px;
        margin: 5px 0;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 16px;
    }

        .input-field:focus {
            outline: none;
            border-color: #007bff;
        }

    /* Button styles */
    .submit-btn {
        width: 100%;
        padding: 10px;
        font-size: 16px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        .submit-btn:hover {
            background-color: #0056b3;
        }

    .register-link {
        text-align: center;
        margin-top: 15px;
    }

        .register-link a {
            color: #007bff;
            text-decoration: none;
        }

            .register-link a:hover {
                text-decoration: underline;
            }

    .message-text {
        text-align: center;
        color: red;
        margin-top: 10px;
        font-size: 16px;
    }
</style>
